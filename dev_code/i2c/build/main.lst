ARM GAS  /tmp/ccZmCGbp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB133:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** /* USER CODE END Includes */
  27:Src/main.c    **** 
  28:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  29:Src/main.c    **** /* USER CODE BEGIN PTD */
  30:Src/main.c    **** 
  31:Src/main.c    **** /* USER CODE END PTD */
ARM GAS  /tmp/ccZmCGbp.s 			page 2


  32:Src/main.c    **** 
  33:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  34:Src/main.c    **** /* USER CODE BEGIN PD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* USER CODE END PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** I2C_HandleTypeDef hi2c2;
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE BEGIN PV */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END PV */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  51:Src/main.c    **** void SystemClock_Config(void);
  52:Src/main.c    **** static void MX_GPIO_Init(void);
  53:Src/main.c    **** static void MX_I2C2_Init(void);
  54:Src/main.c    **** /* USER CODE BEGIN PFP */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE END PFP */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  59:Src/main.c    **** /* USER CODE BEGIN 0 */
  60:Src/main.c    **** uint8_t i2cData[2]; 
  61:Src/main.c    **** /* USER CODE END 0 */
  62:Src/main.c    **** 
  63:Src/main.c    **** /**
  64:Src/main.c    ****   * @brief  The application entry point.
  65:Src/main.c    ****   * @retval int
  66:Src/main.c    ****   */
  67:Src/main.c    **** int main(void)
  68:Src/main.c    **** {
  69:Src/main.c    ****   /* USER CODE BEGIN 1 */
  70:Src/main.c    **** 
  71:Src/main.c    ****   /* USER CODE END 1 */
  72:Src/main.c    **** 
  73:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  74:Src/main.c    **** 
  75:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  76:Src/main.c    ****   HAL_Init();
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* USER CODE BEGIN Init */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* USER CODE END Init */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* Configure the system clock */
  83:Src/main.c    ****   SystemClock_Config();
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE END SysInit */
  88:Src/main.c    **** 
ARM GAS  /tmp/ccZmCGbp.s 			page 3


  89:Src/main.c    ****   /* Initialize all configured peripherals */
  90:Src/main.c    ****   MX_GPIO_Init();
  91:Src/main.c    ****   MX_I2C2_Init();
  92:Src/main.c    ****   /* USER CODE BEGIN 2 */
  93:Src/main.c    **** 
  94:Src/main.c    ****   //checks if the i2c device is ready
  95:Src/main.c    ****   //orient the rtc so you can read the text 
  96:Src/main.c    ****   //p1 is at the very left, p5 is at the very right 
  97:Src/main.c    ****   //p1>>5v p2>>sdl p3>>scl p5>>gnd
  98:Src/main.c    ****   if(HAL_I2C_IsDeviceReady(&hi2c2,0xD0,2,10)==HAL_OK){
  99:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_0);
 100:Src/main.c    ****     HAL_Delay(500); 
 101:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_7);
 102:Src/main.c    ****     HAL_Delay(500);
 103:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_14);
 104:Src/main.c    ****     HAL_Delay(500); 
 105:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_0);
 106:Src/main.c    ****     HAL_Delay(500); 
 107:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_7);
 108:Src/main.c    ****     HAL_Delay(500);
 109:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_14);
 110:Src/main.c    ****     HAL_Delay(500); 
 111:Src/main.c    ****   }
 112:Src/main.c    ****   i2cData[0]=0x00; 
 113:Src/main.c    ****   i2cData[1]=0x7F; 
 114:Src/main.c    ****   //takes in (i2chandletypedef,slaveaddress,data,lengthofdata,timeout)
 115:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c2,0xD0,i2cData,2,10);  
 116:Src/main.c    ****  
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* USER CODE END 2 */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* Infinite loop */
 121:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 122:Src/main.c    ****   while (1)
 123:Src/main.c    ****   {
 124:Src/main.c    ****     /* USER CODE END WHILE */
 125:Src/main.c    **** 
 126:Src/main.c    ****     /* USER CODE BEGIN 3 */
 127:Src/main.c    **** 
 128:Src/main.c    ****     //read via i2c 
 129:Src/main.c    ****     i2cData[0]=0x00; 
 130:Src/main.c    ****     HAL_I2C_Master_Transmit(&hi2c2,0xD0,i2cData,1,10);  
 131:Src/main.c    ****     HAL_I2C_Master_Receive(&hi2c2,0xD0,&i2cData[1],1,10);  
 132:Src/main.c    **** 
 133:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_0);
 134:Src/main.c    ****     HAL_Delay(i2cData[1]*10); 
 135:Src/main.c    ****     // HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_7);
 136:Src/main.c    ****     // HAL_Delay(500);
 137:Src/main.c    ****     // HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_14);
 138:Src/main.c    ****     // HAL_Delay(500); 
 139:Src/main.c    ****   }
 140:Src/main.c    ****   /* USER CODE END 3 */
 141:Src/main.c    **** }
 142:Src/main.c    **** 
 143:Src/main.c    **** /**
 144:Src/main.c    ****   * @brief System Clock Configuration
 145:Src/main.c    ****   * @retval None
ARM GAS  /tmp/ccZmCGbp.s 			page 4


 146:Src/main.c    ****   */
 147:Src/main.c    **** void SystemClock_Config(void)
 148:Src/main.c    **** {
 149:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 150:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 151:Src/main.c    **** 
 152:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 153:Src/main.c    ****   */
 154:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 155:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 156:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 157:Src/main.c    ****   */
 158:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 159:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 163:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 164:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 165:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 166:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 167:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 168:Src/main.c    ****   {
 169:Src/main.c    ****     Error_Handler();
 170:Src/main.c    ****   }
 171:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 172:Src/main.c    ****   */
 173:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 174:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 175:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 176:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 177:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 178:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 179:Src/main.c    **** 
 180:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 181:Src/main.c    ****   {
 182:Src/main.c    ****     Error_Handler();
 183:Src/main.c    ****   }
 184:Src/main.c    **** }
 185:Src/main.c    **** 
 186:Src/main.c    **** /**
 187:Src/main.c    ****   * @brief I2C2 Initialization Function
 188:Src/main.c    ****   * @param None
 189:Src/main.c    ****   * @retval None
 190:Src/main.c    ****   */
 191:Src/main.c    **** static void MX_I2C2_Init(void)
 192:Src/main.c    **** {
 193:Src/main.c    **** 
 194:Src/main.c    ****   /* USER CODE BEGIN I2C2_Init 0 */
 195:Src/main.c    **** 
 196:Src/main.c    ****   /* USER CODE END I2C2_Init 0 */
 197:Src/main.c    **** 
 198:Src/main.c    ****   /* USER CODE BEGIN I2C2_Init 1 */
 199:Src/main.c    **** 
 200:Src/main.c    ****   /* USER CODE END I2C2_Init 1 */
 201:Src/main.c    ****   hi2c2.Instance = I2C2;
 202:Src/main.c    ****   hi2c2.Init.ClockSpeed = 100000;
ARM GAS  /tmp/ccZmCGbp.s 			page 5


 203:Src/main.c    ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 204:Src/main.c    ****   hi2c2.Init.OwnAddress1 = 0;
 205:Src/main.c    ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 206:Src/main.c    ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 207:Src/main.c    ****   hi2c2.Init.OwnAddress2 = 0;
 208:Src/main.c    ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 209:Src/main.c    ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 210:Src/main.c    ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 211:Src/main.c    ****   {
 212:Src/main.c    ****     Error_Handler();
 213:Src/main.c    ****   }
 214:Src/main.c    ****   /* USER CODE BEGIN I2C2_Init 2 */
 215:Src/main.c    **** 
 216:Src/main.c    ****   /* USER CODE END I2C2_Init 2 */
 217:Src/main.c    **** 
 218:Src/main.c    **** }
 219:Src/main.c    **** 
 220:Src/main.c    **** /**
 221:Src/main.c    ****   * @brief GPIO Initialization Function
 222:Src/main.c    ****   * @param None
 223:Src/main.c    ****   * @retval None
 224:Src/main.c    ****   */
 225:Src/main.c    **** static void MX_GPIO_Init(void)
 226:Src/main.c    **** {
  28              		.loc 1 226 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 227:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 227 0
  42 0004 0024     		movs	r4, #0
  43 0006 0394     		str	r4, [sp, #12]
  44 0008 0494     		str	r4, [sp, #16]
  45 000a 0594     		str	r4, [sp, #20]
  46 000c 0694     		str	r4, [sp, #24]
  47 000e 0794     		str	r4, [sp, #28]
  48              	.LBB2:
 228:Src/main.c    **** 
 229:Src/main.c    ****   /* GPIO Ports Clock Enable */
 230:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  49              		.loc 1 230 0
  50 0010 0094     		str	r4, [sp]
  51 0012 194B     		ldr	r3, .L3
  52 0014 1A6B     		ldr	r2, [r3, #48]
  53 0016 42F02002 		orr	r2, r2, #32
  54 001a 1A63     		str	r2, [r3, #48]
  55 001c 1A6B     		ldr	r2, [r3, #48]
  56 001e 02F02002 		and	r2, r2, #32
ARM GAS  /tmp/ccZmCGbp.s 			page 6


  57 0022 0092     		str	r2, [sp]
  58 0024 009A     		ldr	r2, [sp]
  59              	.LBE2:
  60              	.LBB3:
 231:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  61              		.loc 1 231 0
  62 0026 0194     		str	r4, [sp, #4]
  63 0028 1A6B     		ldr	r2, [r3, #48]
  64 002a 42F08002 		orr	r2, r2, #128
  65 002e 1A63     		str	r2, [r3, #48]
  66 0030 1A6B     		ldr	r2, [r3, #48]
  67 0032 02F08002 		and	r2, r2, #128
  68 0036 0192     		str	r2, [sp, #4]
  69 0038 019A     		ldr	r2, [sp, #4]
  70              	.LBE3:
  71              	.LBB4:
 232:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  72              		.loc 1 232 0
  73 003a 0294     		str	r4, [sp, #8]
  74 003c 1A6B     		ldr	r2, [r3, #48]
  75 003e 42F00202 		orr	r2, r2, #2
  76 0042 1A63     		str	r2, [r3, #48]
  77 0044 1B6B     		ldr	r3, [r3, #48]
  78 0046 03F00203 		and	r3, r3, #2
  79 004a 0293     		str	r3, [sp, #8]
  80 004c 029B     		ldr	r3, [sp, #8]
  81              	.LBE4:
 233:Src/main.c    **** 
 234:Src/main.c    ****   /*Configure GPIO pin Output Level */
 235:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_14|GPIO_PIN_7, GPIO_PIN_RESET);
  82              		.loc 1 235 0
  83 004e 0B4D     		ldr	r5, .L3+4
  84 0050 2846     		mov	r0, r5
  85 0052 44F28101 		movw	r1, #16513
  86 0056 2246     		mov	r2, r4
  87 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL0:
 236:Src/main.c    **** 
 237:Src/main.c    ****   /*Configure GPIO pins : PB0 PB14 PB7 */
 238:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_14|GPIO_PIN_7;
  89              		.loc 1 238 0
  90 005c 44F28103 		movw	r3, #16513
  91 0060 0393     		str	r3, [sp, #12]
 239:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  92              		.loc 1 239 0
  93 0062 0123     		movs	r3, #1
  94 0064 0493     		str	r3, [sp, #16]
 240:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 240 0
  96 0066 0594     		str	r4, [sp, #20]
 241:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  97              		.loc 1 241 0
  98 0068 0694     		str	r4, [sp, #24]
 242:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
  99              		.loc 1 242 0
 100 006a 2846     		mov	r0, r5
 101 006c 03A9     		add	r1, sp, #12
ARM GAS  /tmp/ccZmCGbp.s 			page 7


 102 006e FFF7FEFF 		bl	HAL_GPIO_Init
 103              	.LVL1:
 243:Src/main.c    **** 
 244:Src/main.c    **** }
 104              		.loc 1 244 0
 105 0072 09B0     		add	sp, sp, #36
 106              	.LCFI2:
 107              		.cfi_def_cfa_offset 12
 108              		@ sp needed
 109 0074 30BD     		pop	{r4, r5, pc}
 110              	.L4:
 111 0076 00BF     		.align	2
 112              	.L3:
 113 0078 00380240 		.word	1073887232
 114 007c 00040240 		.word	1073873920
 115              		.cfi_endproc
 116              	.LFE133:
 118              		.section	.text.MX_I2C2_Init,"ax",%progbits
 119              		.align	2
 120              		.thumb
 121              		.thumb_func
 123              	MX_I2C2_Init:
 124              	.LFB132:
 192:Src/main.c    **** 
 125              		.loc 1 192 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129 0000 08B5     		push	{r3, lr}
 130              	.LCFI3:
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 3, -8
 133              		.cfi_offset 14, -4
 201:Src/main.c    ****   hi2c2.Init.ClockSpeed = 100000;
 134              		.loc 1 201 0
 135 0002 0948     		ldr	r0, .L7
 136 0004 094B     		ldr	r3, .L7+4
 137 0006 0360     		str	r3, [r0]
 202:Src/main.c    ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 138              		.loc 1 202 0
 139 0008 094B     		ldr	r3, .L7+8
 140 000a 4360     		str	r3, [r0, #4]
 203:Src/main.c    ****   hi2c2.Init.OwnAddress1 = 0;
 141              		.loc 1 203 0
 142 000c 0023     		movs	r3, #0
 143 000e 8360     		str	r3, [r0, #8]
 204:Src/main.c    ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 144              		.loc 1 204 0
 145 0010 C360     		str	r3, [r0, #12]
 205:Src/main.c    ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 146              		.loc 1 205 0
 147 0012 4FF48042 		mov	r2, #16384
 148 0016 0261     		str	r2, [r0, #16]
 206:Src/main.c    ****   hi2c2.Init.OwnAddress2 = 0;
 149              		.loc 1 206 0
 150 0018 4361     		str	r3, [r0, #20]
 207:Src/main.c    ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
ARM GAS  /tmp/ccZmCGbp.s 			page 8


 151              		.loc 1 207 0
 152 001a 8361     		str	r3, [r0, #24]
 208:Src/main.c    ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 153              		.loc 1 208 0
 154 001c C361     		str	r3, [r0, #28]
 209:Src/main.c    ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 155              		.loc 1 209 0
 156 001e 0362     		str	r3, [r0, #32]
 210:Src/main.c    ****   {
 157              		.loc 1 210 0
 158 0020 FFF7FEFF 		bl	HAL_I2C_Init
 159              	.LVL2:
 160 0024 08BD     		pop	{r3, pc}
 161              	.L8:
 162 0026 00BF     		.align	2
 163              	.L7:
 164 0028 00000000 		.word	hi2c2
 165 002c 00580040 		.word	1073764352
 166 0030 A0860100 		.word	100000
 167              		.cfi_endproc
 168              	.LFE132:
 170              		.section	.text.SystemClock_Config,"ax",%progbits
 171              		.align	2
 172              		.global	SystemClock_Config
 173              		.thumb
 174              		.thumb_func
 176              	SystemClock_Config:
 177              	.LFB131:
 148:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 178              		.loc 1 148 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 80
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182 0000 30B5     		push	{r4, r5, lr}
 183              	.LCFI4:
 184              		.cfi_def_cfa_offset 12
 185              		.cfi_offset 4, -12
 186              		.cfi_offset 5, -8
 187              		.cfi_offset 14, -4
 188 0002 95B0     		sub	sp, sp, #84
 189              	.LCFI5:
 190              		.cfi_def_cfa_offset 96
 149:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 191              		.loc 1 149 0
 192 0004 0024     		movs	r4, #0
 193 0006 0794     		str	r4, [sp, #28]
 194 0008 0894     		str	r4, [sp, #32]
 195 000a 0994     		str	r4, [sp, #36]
 196 000c 0A94     		str	r4, [sp, #40]
 197 000e 0B94     		str	r4, [sp, #44]
 198 0010 0C94     		str	r4, [sp, #48]
 199 0012 0D94     		str	r4, [sp, #52]
 200 0014 0E94     		str	r4, [sp, #56]
 201 0016 0F94     		str	r4, [sp, #60]
 202 0018 1094     		str	r4, [sp, #64]
 203 001a 1194     		str	r4, [sp, #68]
 204 001c 1294     		str	r4, [sp, #72]
ARM GAS  /tmp/ccZmCGbp.s 			page 9


 205 001e 1394     		str	r4, [sp, #76]
 150:Src/main.c    **** 
 206              		.loc 1 150 0
 207 0020 0294     		str	r4, [sp, #8]
 208 0022 0394     		str	r4, [sp, #12]
 209 0024 0494     		str	r4, [sp, #16]
 210 0026 0594     		str	r4, [sp, #20]
 211 0028 0694     		str	r4, [sp, #24]
 212              	.LBB5:
 154:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 213              		.loc 1 154 0
 214 002a 0094     		str	r4, [sp]
 215 002c 1C4B     		ldr	r3, .L11
 216 002e 1A6C     		ldr	r2, [r3, #64]
 217 0030 42F08052 		orr	r2, r2, #268435456
 218 0034 1A64     		str	r2, [r3, #64]
 219 0036 1B6C     		ldr	r3, [r3, #64]
 220 0038 03F08053 		and	r3, r3, #268435456
 221 003c 0093     		str	r3, [sp]
 222 003e 009B     		ldr	r3, [sp]
 223              	.LBE5:
 224              	.LBB6:
 155:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 225              		.loc 1 155 0
 226 0040 0194     		str	r4, [sp, #4]
 227 0042 184B     		ldr	r3, .L11+4
 228 0044 1A68     		ldr	r2, [r3]
 229 0046 42F44042 		orr	r2, r2, #49152
 230 004a 1A60     		str	r2, [r3]
 231 004c 1B68     		ldr	r3, [r3]
 232 004e 03F44043 		and	r3, r3, #49152
 233 0052 0193     		str	r3, [sp, #4]
 234 0054 019B     		ldr	r3, [sp, #4]
 235              	.LBE6:
 158:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 236              		.loc 1 158 0
 237 0056 0123     		movs	r3, #1
 238 0058 0793     		str	r3, [sp, #28]
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 239              		.loc 1 159 0
 240 005a 4FF48033 		mov	r3, #65536
 241 005e 0893     		str	r3, [sp, #32]
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 242              		.loc 1 160 0
 243 0060 0225     		movs	r5, #2
 244 0062 0D95     		str	r5, [sp, #52]
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 245              		.loc 1 161 0
 246 0064 4FF48003 		mov	r3, #4194304
 247 0068 0E93     		str	r3, [sp, #56]
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 248              		.loc 1 162 0
 249 006a 0423     		movs	r3, #4
 250 006c 0F93     		str	r3, [sp, #60]
 163:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 251              		.loc 1 163 0
 252 006e A823     		movs	r3, #168
ARM GAS  /tmp/ccZmCGbp.s 			page 10


 253 0070 1093     		str	r3, [sp, #64]
 164:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 254              		.loc 1 164 0
 255 0072 1195     		str	r5, [sp, #68]
 165:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 256              		.loc 1 165 0
 257 0074 0723     		movs	r3, #7
 258 0076 1293     		str	r3, [sp, #72]
 166:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 259              		.loc 1 166 0
 260 0078 1395     		str	r5, [sp, #76]
 167:Src/main.c    ****   {
 261              		.loc 1 167 0
 262 007a 07A8     		add	r0, sp, #28
 263 007c FFF7FEFF 		bl	HAL_RCC_OscConfig
 264              	.LVL3:
 173:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 265              		.loc 1 173 0
 266 0080 0F23     		movs	r3, #15
 267 0082 0293     		str	r3, [sp, #8]
 175:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 268              		.loc 1 175 0
 269 0084 0395     		str	r5, [sp, #12]
 176:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 270              		.loc 1 176 0
 271 0086 0494     		str	r4, [sp, #16]
 177:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 272              		.loc 1 177 0
 273 0088 4FF4A053 		mov	r3, #5120
 274 008c 0593     		str	r3, [sp, #20]
 178:Src/main.c    **** 
 275              		.loc 1 178 0
 276 008e 4FF48053 		mov	r3, #4096
 277 0092 0693     		str	r3, [sp, #24]
 180:Src/main.c    ****   {
 278              		.loc 1 180 0
 279 0094 02A8     		add	r0, sp, #8
 280 0096 0521     		movs	r1, #5
 281 0098 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 282              	.LVL4:
 184:Src/main.c    **** 
 283              		.loc 1 184 0
 284 009c 15B0     		add	sp, sp, #84
 285              	.LCFI6:
 286              		.cfi_def_cfa_offset 12
 287              		@ sp needed
 288 009e 30BD     		pop	{r4, r5, pc}
 289              	.L12:
 290              		.align	2
 291              	.L11:
 292 00a0 00380240 		.word	1073887232
 293 00a4 00700040 		.word	1073770496
 294              		.cfi_endproc
 295              	.LFE131:
 297              		.section	.text.main,"ax",%progbits
 298              		.align	2
 299              		.global	main
ARM GAS  /tmp/ccZmCGbp.s 			page 11


 300              		.thumb
 301              		.thumb_func
 303              	main:
 304              	.LFB130:
  68:Src/main.c    ****   /* USER CODE BEGIN 1 */
 305              		.loc 1 68 0
 306              		.cfi_startproc
 307              		@ Volatile: function does not return.
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310 0000 00B5     		push	{lr}
 311              	.LCFI7:
 312              		.cfi_def_cfa_offset 4
 313              		.cfi_offset 14, -4
 314 0002 83B0     		sub	sp, sp, #12
 315              	.LCFI8:
 316              		.cfi_def_cfa_offset 16
  76:Src/main.c    **** 
 317              		.loc 1 76 0
 318 0004 FFF7FEFF 		bl	HAL_Init
 319              	.LVL5:
  83:Src/main.c    **** 
 320              		.loc 1 83 0
 321 0008 FFF7FEFF 		bl	SystemClock_Config
 322              	.LVL6:
  90:Src/main.c    ****   MX_I2C2_Init();
 323              		.loc 1 90 0
 324 000c FFF7FEFF 		bl	MX_GPIO_Init
 325              	.LVL7:
  91:Src/main.c    ****   /* USER CODE BEGIN 2 */
 326              		.loc 1 91 0
 327 0010 FFF7FEFF 		bl	MX_I2C2_Init
 328              	.LVL8:
  98:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_0);
 329              		.loc 1 98 0
 330 0014 3148     		ldr	r0, .L17
 331 0016 D021     		movs	r1, #208
 332 0018 0222     		movs	r2, #2
 333 001a 0A23     		movs	r3, #10
 334 001c FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
 335              	.LVL9:
 336 0020 90BB     		cbnz	r0, .L14
  99:Src/main.c    ****     HAL_Delay(500); 
 337              		.loc 1 99 0
 338 0022 2F4C     		ldr	r4, .L17+4
 339 0024 2046     		mov	r0, r4
 340 0026 0121     		movs	r1, #1
 341 0028 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 342              	.LVL10:
 100:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_7);
 343              		.loc 1 100 0
 344 002c 4FF4FA70 		mov	r0, #500
 345 0030 FFF7FEFF 		bl	HAL_Delay
 346              	.LVL11:
 101:Src/main.c    ****     HAL_Delay(500);
 347              		.loc 1 101 0
 348 0034 2046     		mov	r0, r4
ARM GAS  /tmp/ccZmCGbp.s 			page 12


 349 0036 8021     		movs	r1, #128
 350 0038 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 351              	.LVL12:
 102:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_14);
 352              		.loc 1 102 0
 353 003c 4FF4FA70 		mov	r0, #500
 354 0040 FFF7FEFF 		bl	HAL_Delay
 355              	.LVL13:
 103:Src/main.c    ****     HAL_Delay(500); 
 356              		.loc 1 103 0
 357 0044 2046     		mov	r0, r4
 358 0046 4FF48041 		mov	r1, #16384
 359 004a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 360              	.LVL14:
 104:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_0);
 361              		.loc 1 104 0
 362 004e 4FF4FA70 		mov	r0, #500
 363 0052 FFF7FEFF 		bl	HAL_Delay
 364              	.LVL15:
 105:Src/main.c    ****     HAL_Delay(500); 
 365              		.loc 1 105 0
 366 0056 2046     		mov	r0, r4
 367 0058 0121     		movs	r1, #1
 368 005a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 369              	.LVL16:
 106:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_7);
 370              		.loc 1 106 0
 371 005e 4FF4FA70 		mov	r0, #500
 372 0062 FFF7FEFF 		bl	HAL_Delay
 373              	.LVL17:
 107:Src/main.c    ****     HAL_Delay(500);
 374              		.loc 1 107 0
 375 0066 2046     		mov	r0, r4
 376 0068 8021     		movs	r1, #128
 377 006a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 378              	.LVL18:
 108:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_14);
 379              		.loc 1 108 0
 380 006e 4FF4FA70 		mov	r0, #500
 381 0072 FFF7FEFF 		bl	HAL_Delay
 382              	.LVL19:
 109:Src/main.c    ****     HAL_Delay(500); 
 383              		.loc 1 109 0
 384 0076 2046     		mov	r0, r4
 385 0078 4FF48041 		mov	r1, #16384
 386 007c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 387              	.LVL20:
 110:Src/main.c    ****   }
 388              		.loc 1 110 0
 389 0080 4FF4FA70 		mov	r0, #500
 390 0084 FFF7FEFF 		bl	HAL_Delay
 391              	.LVL21:
 392              	.L14:
 112:Src/main.c    ****   i2cData[1]=0x7F; 
 393              		.loc 1 112 0
 394 0088 164A     		ldr	r2, .L17+8
 395 008a 0023     		movs	r3, #0
ARM GAS  /tmp/ccZmCGbp.s 			page 13


 396 008c 1370     		strb	r3, [r2]
 113:Src/main.c    ****   //takes in (i2chandletypedef,slaveaddress,data,lengthofdata,timeout)
 397              		.loc 1 113 0
 398 008e 7F23     		movs	r3, #127
 399 0090 5370     		strb	r3, [r2, #1]
 115:Src/main.c    ****  
 400              		.loc 1 115 0
 401 0092 0A23     		movs	r3, #10
 402 0094 0093     		str	r3, [sp]
 403 0096 1148     		ldr	r0, .L17
 404 0098 D021     		movs	r1, #208
 405 009a 0223     		movs	r3, #2
 406 009c FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 407              	.LVL22:
 408              	.L15:
 129:Src/main.c    ****     HAL_I2C_Master_Transmit(&hi2c2,0xD0,i2cData,1,10);  
 409              		.loc 1 129 0 discriminator 1
 410 00a0 104C     		ldr	r4, .L17+8
 411 00a2 0023     		movs	r3, #0
 412 00a4 2370     		strb	r3, [r4]
 130:Src/main.c    ****     HAL_I2C_Master_Receive(&hi2c2,0xD0,&i2cData[1],1,10);  
 413              		.loc 1 130 0 discriminator 1
 414 00a6 0D4D     		ldr	r5, .L17
 415 00a8 0A26     		movs	r6, #10
 416 00aa 0096     		str	r6, [sp]
 417 00ac 2846     		mov	r0, r5
 418 00ae D021     		movs	r1, #208
 419 00b0 2246     		mov	r2, r4
 420 00b2 0123     		movs	r3, #1
 421 00b4 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 422              	.LVL23:
 131:Src/main.c    **** 
 423              		.loc 1 131 0 discriminator 1
 424 00b8 0096     		str	r6, [sp]
 425 00ba 2846     		mov	r0, r5
 426 00bc D021     		movs	r1, #208
 427 00be 621C     		adds	r2, r4, #1
 428 00c0 0123     		movs	r3, #1
 429 00c2 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 430              	.LVL24:
 133:Src/main.c    ****     HAL_Delay(i2cData[1]*10); 
 431              		.loc 1 133 0 discriminator 1
 432 00c6 0648     		ldr	r0, .L17+4
 433 00c8 0121     		movs	r1, #1
 434 00ca FFF7FEFF 		bl	HAL_GPIO_TogglePin
 435              	.LVL25:
 134:Src/main.c    ****     // HAL_GPIO_TogglePin(GPIOB,GPIO_PIN_7);
 436              		.loc 1 134 0 discriminator 1
 437 00ce 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 438 00d0 00EB8000 		add	r0, r0, r0, lsl #2
 439 00d4 4000     		lsls	r0, r0, #1
 440 00d6 FFF7FEFF 		bl	HAL_Delay
 441              	.LVL26:
 139:Src/main.c    ****   /* USER CODE END 3 */
 442              		.loc 1 139 0 discriminator 1
 443 00da E1E7     		b	.L15
 444              	.L18:
ARM GAS  /tmp/ccZmCGbp.s 			page 14


 445              		.align	2
 446              	.L17:
 447 00dc 00000000 		.word	hi2c2
 448 00e0 00040240 		.word	1073873920
 449 00e4 00000000 		.word	i2cData
 450              		.cfi_endproc
 451              	.LFE130:
 453              		.section	.text.Error_Handler,"ax",%progbits
 454              		.align	2
 455              		.global	Error_Handler
 456              		.thumb
 457              		.thumb_func
 459              	Error_Handler:
 460              	.LFB134:
 245:Src/main.c    **** 
 246:Src/main.c    **** /* USER CODE BEGIN 4 */
 247:Src/main.c    **** 
 248:Src/main.c    **** /* USER CODE END 4 */
 249:Src/main.c    **** 
 250:Src/main.c    **** /**
 251:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 252:Src/main.c    ****   * @retval None
 253:Src/main.c    ****   */
 254:Src/main.c    **** void Error_Handler(void)
 255:Src/main.c    **** {
 461              		.loc 1 255 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 466 0000 7047     		bx	lr
 467              		.cfi_endproc
 468              	.LFE134:
 470              		.comm	i2cData,2,4
 471              		.comm	hi2c2,84,4
 472 0002 00BF     		.text
 473              	.Letext0:
 474              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 475              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 476              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 477              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 478              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 479              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 480              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 481              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 482              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 483              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
 484              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccZmCGbp.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccZmCGbp.s:21     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccZmCGbp.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccZmCGbp.s:113    .text.MX_GPIO_Init:0000000000000078 $d
     /tmp/ccZmCGbp.s:119    .text.MX_I2C2_Init:0000000000000000 $t
     /tmp/ccZmCGbp.s:123    .text.MX_I2C2_Init:0000000000000000 MX_I2C2_Init
     /tmp/ccZmCGbp.s:164    .text.MX_I2C2_Init:0000000000000028 $d
                            *COM*:0000000000000054 hi2c2
     /tmp/ccZmCGbp.s:171    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccZmCGbp.s:176    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccZmCGbp.s:292    .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccZmCGbp.s:298    .text.main:0000000000000000 $t
     /tmp/ccZmCGbp.s:303    .text.main:0000000000000000 main
     /tmp/ccZmCGbp.s:447    .text.main:00000000000000dc $d
                            *COM*:0000000000000002 i2cData
     /tmp/ccZmCGbp.s:454    .text.Error_Handler:0000000000000000 $t
     /tmp/ccZmCGbp.s:459    .text.Error_Handler:0000000000000000 Error_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_I2C_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_I2C_IsDeviceReady
HAL_GPIO_TogglePin
HAL_Delay
HAL_I2C_Master_Transmit
HAL_I2C_Master_Receive
